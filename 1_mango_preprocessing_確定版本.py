# -*- coding: utf-8 -*-
"""1.mango_preprocessing_確定版本.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-WfMCSChgkcKBOh8O6iZe8NWqbKYfYJt
"""

# 目前遇到的問題是不會資料預處理 
# 將資料存到numpy 的 npz檔 之後
# 要做image generate

# 連結google
from google.colab import drive
drive.mount('/content/drive')

#  載入套件
from glob import glob
import cv2
import matplotlib.pyplot as plt
import numpy as np
from tensorflow.keras.preprocessing.image import img_to_array
from tqdm.auto import tqdm
import keras
import os
import csv
from shutil import copyfile
from keras.layers import Input, Dense, Conv2D, MaxPool2D, Flatten
from keras.models import Model
from sklearn.model_selection import train_test_split
import seaborn as sns
import pandas as pd

df = pd.read_csv("/content/drive/My Drive/Colab Notebooks/AIMango/train.csv", encoding="utf-8")
df["label"].value_counts()

cls = {"A":0, "B":1, "C":2}

# x_train處理
data = np.empty((5600,224,224,3),dtype=np.float32)
label = np.empty((5600,),dtype=np.float64)
IMG_SIZE = 224

with open("/content/drive/My Drive/Colab Notebooks/AIMango/train.csv", "r", encoding="utf-8") as file:
  csvfile = csv.reader(file)
  next(csvfile)
  
  for i, row in tqdm(enumerate(csvfile)):
    label[i] = cls[row[1]]
    # if row[1] == "A":
    #   label.append(0)
    # elif row[1] == "B":
    #   label.append(1)    
    # elif row[1] == "C":
    #   label.append(2)

    img = cv2.imread('/content/drive/My Drive/Colab Notebooks/AIMango/C1-P1_Train/'+ row[0])
    img = img[:,:,::-1]
    img = cv2.resize(img, (IMG_SIZE, IMG_SIZE))
    # img = img/255.0   因為caffe,tf,pythorch用的不一樣所以不要先/255
    img = img_to_array(img)
    data[i] =img

# 處理y_train資料
from tensorflow.keras.utils import to_categorical
# for i in range(len(data)):
#   data[i] = data[i].astype("float32")
y_train = to_categorical(label, num_classes=3)
# y_train = np.array(y_train)

print(y_train[0])
print(data[0])

np.savez('/content/drive/My Drive/Colab Notebooks/AIMango/train1_preprocess.npz', x=data, y=y_train)

# 確認train資料能讀取
train = np.load('/content/drive/My Drive/Colab Notebooks/AIMango/train1_preprocess.npz')

x_train = train['x']
y_train = train['y']

print(x_train[0])
print(y_train[0])

# x_test處理
data = np.empty((800,224,224,3),dtype=np.float32)
label = np.empty((800,),dtype=np.float64)
IMG_SIZE = 224

with open("/content/drive/My Drive/Colab Notebooks/AIMango/dev.csv", "r", encoding="utf-8") as file:
  csvfile = csv.reader(file)
  next(csvfile)

  for i, row in tqdm(enumerate(csvfile)):
    label[i] = cls[row[1]]
    # if row[1] == "A":
    #   label.append(0)
    # elif row[1] == "B":
    #   label.append(1)    
    # elif row[1] == "C":
    #   label.append(2)
    

    img = cv2.imread('/content/drive/My Drive/Colab Notebooks/AIMango/C1-P1_Dev/'+row[0])
    img_path = row[0]
    img2 = img[:,:,::-1]
    res = cv2.resize(img2, (IMG_SIZE, IMG_SIZE))
    # img = img/255.0 因為caffe,tf,pythorch用的不一樣所以不要先/255
    res = img_to_array(res)
    data[i] = res

print(data[0].dtype)

# 處理y_test資料
from tensorflow.keras.utils import to_categorical
for i in range(len(data)):
  # datas[i] = datas[i].astype("float32")/255
  data[i] = data[i].astype("float32")
y_test = to_categorical(label, num_classes=3)
y_test = np.array(y_test)

print(data[0].dtype)
print(y_test[0])

np.savez('/content/drive/My Drive/Colab Notebooks/AIMango/test1_preprocess.npz', x=data, y=y_test)

# 確認test資料能讀取
test = np.load('/content/drive/My Drive/Colab Notebooks/AIMango/test1_preprocess.npz')

x_test = test['x']
y_test = test['y']

print(x_test[0].dtype)
print(y_test[0])



